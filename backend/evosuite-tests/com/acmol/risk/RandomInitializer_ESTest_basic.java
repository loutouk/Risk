/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 21 22:46:46 GMT 2019
 */

package com.acmol.risk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acmol.risk.Continent;
import com.acmol.risk.Player;
import com.acmol.risk.RandomInitializer;
import com.acmol.risk.Territory;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RandomInitializer_ESTest extends RandomInitializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      randomInitializer0.initArmy(arrayList0, (Player[]) null);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[3];
      Territory territory0 = new Territory("J}3N2(V6`cJ<nZvMGmJ");
      Player player0 = territory0.owner;
      Player player1 = territory0.owner;
      Player player2 = territory0.owner;
      playerArray0[2] = null;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[5];
      Player player0 = new Player("", "");
      playerArray0[0] = player0;
      Player player1 = new Player("com.acmol.risk.Card", "");
      playerArray0[1] = player1;
      Territory territory0 = new Territory("");
      Player player2 = territory0.owner;
      playerArray0[2] = null;
      Player player3 = territory0.owner;
      playerArray0[3] = null;
      Player player4 = territory0.owner;
      playerArray0[4] = null;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[7];
      Player player0 = new Player("%sT8}r,;a", "");
      playerArray0[0] = player0;
      Territory territory0 = new Territory("%sT8}r,;a");
      Player player1 = territory0.owner;
      playerArray0[1] = null;
      Player player2 = new Player("com.acmol.risk.ArmyInitializer$IncorretPlayerNumber", "%sT8}r,;a");
      playerArray0[2] = player2;
      Player player3 = territory0.owner;
      playerArray0[3] = null;
      Player player4 = territory0.owner;
      playerArray0[4] = null;
      Player player5 = territory0.owner;
      playerArray0[5] = null;
      Player player6 = territory0.owner;
      playerArray0[6] = null;
      try { 
        randomInitializer0.initArmy(arrayList0, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 7 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      ArrayList<Continent> arrayList1 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[1];
      Player player0 = new Player("~`\u0001y6", "~`\u0001y6");
      playerArray0[0] = player0;
      try { 
        randomInitializer0.initArmy(arrayList1, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 1 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[1];
      Territory territory0 = new Territory(" but it should be between ");
      Player player0 = territory0.owner;
      playerArray0[0] = null;
      try { 
        randomInitializer0.initArmy(arrayList0, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 1 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      Player[] playerArray0 = new Player[2];
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      Player player0 = new Player("", "");
      Player.playerNumberCount = 0;
      playerArray0[0] = player0;
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      Player player1 = new Player((String) null, "c`#hyC<id}$UmDd");
      playerArray0[1] = player1;
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      player0.name = null;
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray1 = new Player[6];
      Continent continent0 = new Continent("");
      arrayList0.add(continent0);
      playerArray1[0] = player1;
      playerArray1[1] = player0;
      playerArray1[2] = player1;
      playerArray1[3] = player1;
      Player player2 = new Player("c`#hyC<id}$UmDd", "c`#hyC<id}$UmDd");
      playerArray1[4] = player2;
      playerArray1[5] = player1;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[8];
      Player player0 = new Player("s[rv", "s[rv");
      playerArray0[0] = player0;
      Territory territory0 = new Territory("NfoFy?i;cH");
      Player player1 = territory0.owner;
      playerArray0[1] = null;
      Player player2 = new Player("nH)-dhlsQh", "NfoFy?i;cH");
      playerArray0[2] = player2;
      Player player3 = new Player("S8hCOH", "NfoFy?i;cH");
      playerArray0[3] = player3;
      playerArray0[4] = player2;
      Player player4 = new Player("", "nH)-dhlsQh");
      playerArray0[5] = player4;
      Player player5 = new Player("", "NfoFy?i;cH");
      playerArray0[6] = player5;
      Player player6 = new Player("", "");
      playerArray0[7] = player6;
      try { 
        randomInitializer0.initArmy(arrayList0, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 8 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }
}
