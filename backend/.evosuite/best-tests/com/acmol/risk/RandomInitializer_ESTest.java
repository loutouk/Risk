/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 21 21:43:15 GMT 2019
 */

package com.acmol.risk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acmol.risk.Continent;
import com.acmol.risk.Player;
import com.acmol.risk.RandomInitializer;
import com.acmol.risk.Territory;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RandomInitializer_ESTest extends RandomInitializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[3];
      arrayList0.add((Continent) null);
      Player player0 = new Player("JX('/-k+UM9-Z*h", " but it should be between ");
      arrayList0.trimToSize();
      playerArray0[0] = player0;
      player0.name = "HfOmXh~i1";
      Territory territory0 = new Territory("HfOmXh~i1");
      Player.playerNumberCount = 1131;
      player0.playerNumberCount = 1131;
      Player player1 = territory0.owner;
      playerArray0[1] = null;
      String string0 = "/H}2;EQ1=w+;{";
      // Undeclared exception!
      try { 
        randomInitializer0.initArmy(arrayList0, playerArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[4];
      Player player0 = new Player("F?,=$p5M}0", "F?,=$p5M}0");
      playerArray0[0] = player0;
      Territory territory0 = new Territory("F?,=$p5M}0");
      Player player1 = territory0.owner;
      playerArray0[1] = null;
      Continent continent0 = new Continent("m@VJ(F~wb\"f?");
      arrayList0.add(continent0);
      Player player2 = territory0.owner;
      playerArray0[2] = null;
      Player.playerNumberCount = 0;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      Player[] playerArray0 = new Player[2];
      Player player0 = new Player("M!", "M!");
      playerArray0[0] = player0;
      Player player1 = new Player(" but it should be between ", "M!");
      playerArray0[1] = player1;
      randomInitializer0.initArmy((ArrayList<Continent>) null, playerArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Continent continent0 = new Continent("4%");
      arrayList0.add(continent0);
      randomInitializer0.initArmy((ArrayList<Continent>) null, (Player[]) null);
      randomInitializer0.initArmy(arrayList0, (Player[]) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[6];
      Player player0 = new Player("org.assertj.core.extractor.ResultOfExtractor", "org.assertj.core.extractor.ResultOfExtractor");
      playerArray0[0] = player0;
      Player player1 = new Player((String) null, (String) null);
      playerArray0[1] = player1;
      Player player2 = new Player(" }lAUs", " }lAUs");
      playerArray0[2] = player2;
      Territory territory0 = new Territory("org.assertj.core.extractor.ResultOfExtractor");
      Player player3 = territory0.owner;
      playerArray0[3] = null;
      Player player4 = territory0.owner;
      playerArray0[4] = null;
      Player player5 = territory0.owner;
      playerArray0[5] = null;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[0];
      try { 
        randomInitializer0.initArmy(arrayList0, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 0 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[3];
      Player player0 = new Player("by ,JY3C8!i#S", "");
      playerArray0[0] = player0;
      Territory territory0 = new Territory("");
      Player player1 = territory0.owner;
      playerArray0[1] = null;
      Player player2 = new Player("by ,JY3C8!i#S", (String) null);
      playerArray0[2] = player2;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[7];
      Player player0 = new Player("", "");
      playerArray0[0] = player0;
      Player player1 = new Player("", "*xI6QTOi!)!B");
      playerArray0[1] = player1;
      Player player2 = new Player((String) null, "");
      playerArray0[2] = player2;
      Territory territory0 = new Territory("<2~F>TCCl1");
      Player player3 = territory0.owner;
      playerArray0[3] = null;
      Player player4 = new Player("3XDa5(ro,^%fW~3Md3[", "Te`-N0;^gtG#");
      playerArray0[4] = player4;
      Player player5 = territory0.owner;
      playerArray0[5] = null;
      Player player6 = new Player((String) null, "");
      playerArray0[6] = player6;
      try { 
        randomInitializer0.initArmy(arrayList0, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 7 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      randomInitializer0.initArmy(arrayList0, (Player[]) null);
      ArrayList<Continent> arrayList1 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[1];
      Continent continent0 = new Continent("I");
      arrayList1.add(continent0);
      Player player0 = new Player("u2z}q7&X", "~AGV7A'7EE?]");
      try { 
        randomInitializer0.initArmy(arrayList1, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 1 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[4];
      Player player0 = new Player("F?,=$p5M}0", "F?,=$p5M}0");
      playerArray0[0] = player0;
      Territory territory0 = new Territory("F?,=$p5M}0");
      Player player1 = territory0.owner;
      playerArray0[1] = null;
      Continent continent0 = new Continent("m@VJ(F~wb\"f?");
      arrayList0.add(continent0);
      Player player2 = territory0.owner;
      playerArray0[2] = null;
      Player.playerNumberCount = 529;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[9];
      Territory territory0 = new Territory("Zn@3");
      Player player0 = territory0.owner;
      playerArray0[0] = null;
      Player player1 = new Player("org.springframework.web.method.HandlerTypePredicate$1", (String) null);
      playerArray0[1] = player1;
      Player player2 = territory0.owner;
      playerArray0[2] = null;
      Player player3 = new Player("{SKUr54njG/", " but it should be between ");
      playerArray0[3] = player3;
      Player player4 = new Player("Error while closing parser", "]");
      playerArray0[4] = player4;
      Player player5 = new Player(" but it should be between ", "Zn@3");
      playerArray0[5] = player5;
      Player player6 = new Player((String) null, "shn<JOb2y6pg49k>}T");
      playerArray0[6] = player6;
      Player player7 = new Player("org.springframework.web.method.HandlerTypePredicate$1", " but it should be between ");
      playerArray0[7] = player7;
      Player player8 = territory0.owner;
      playerArray0[8] = null;
      try { 
        randomInitializer0.initArmy(arrayList0, playerArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The number of player is 9 but it should be between 3 and 6
         //
         verifyException("com.acmol.risk.RandomInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RandomInitializer randomInitializer0 = new RandomInitializer();
      ArrayList<Continent> arrayList0 = new ArrayList<Continent>();
      Player[] playerArray0 = new Player[4];
      Player player0 = new Player("K&cq`1[5,", "");
      playerArray0[2] = player0;
      // Undeclared exception!
      randomInitializer0.initArmy(arrayList0, playerArray0);
  }
}
