/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 21 21:46:00 GMT 2019
 */

package com.acmol.risk;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.acmol.risk.BasicPathfinder;
import com.acmol.risk.Territory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicPathfinder_ESTest extends BasicPathfinder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicPathfinder basicPathfinder0 = new BasicPathfinder();
      Territory territory0 = new Territory("com.acmol.risk.BasicPathfinder");
      Territory territory1 = new Territory("com.acmol.risk.BasicPathfinder");
      boolean boolean0 = basicPathfinder0.availablePath(territory1, territory0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicPathfinder basicPathfinder0 = new BasicPathfinder();
      Territory territory0 = new Territory("com.acmol.risk.BasicPathfinder");
      territory0.neighbors = null;
      // Undeclared exception!
      try { 
        basicPathfinder0.availablePath(territory0, territory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BasicPathfinder basicPathfinder0 = new BasicPathfinder();
      Territory territory0 = new Territory("0");
      territory0.neighbors.add(territory0);
      boolean boolean0 = basicPathfinder0.availablePath(territory0, territory0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BasicPathfinder basicPathfinder0 = new BasicPathfinder();
      Territory territory0 = new Territory("0");
      boolean boolean0 = basicPathfinder0.availablePath(territory0, (Territory) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasicPathfinder basicPathfinder0 = new BasicPathfinder();
      boolean boolean0 = basicPathfinder0.availablePath((Territory) null, (Territory) null);
      assertFalse(boolean0);
  }
}
